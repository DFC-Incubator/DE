---
# vars:
#   reboot - A boolean used to indicate whether or not the playbook should reboot the servers. It
#            defaults to false.

- hosts: systems
  sudo: true
  tasks:
    - group_by: key={{ ansible_distribution }}
      changed_when: false

- hosts: CentOS:RedHat
  gather_facts: false
  sudo: true
  tasks:
    - name: install epel repo
      yum: name=epel-release state=latest

    - name: upgrade system packages
      yum: name=* state=latest

- hosts: CentOS:RedHat:&builders
  gather_facts: false
  sudo: true
  tasks:
    - name: ensure tomcat owns /usr/src/redhat
      file: path=/usr/src/redhat state=directory owner=tomcat recurse=true

- hosts: CentOS:RedHat:&db
  gather_facts: false
  sudo: true
  tasks:
    - name: ensure DE DBMS starts on boot
      service: name=postgresql-9.2 enabled=true

- hosts: Ubuntu
  gather_facts: false
  sudo: true
  tasks:
    - name: update APT repo cache
      apt: update_cache=yes cache_valid_time=86400

    - name: upgrade system packages
      apt: upgrade=safe

- hosts: systems
  gather_facts: false
  sudo: true
  roles:
    - denyhosts
    - nagios

  post_tasks:
    - name: reboot server
      when: reboot|default(false)
      command: reboot

    - name: wait for server to stop
      sudo: false
      when: reboot|default(false)
      local_action: wait_for host="{{ inventory_hostname }}" port={{ ansible_ssh_port }} state=stopped

    - name: verify server up
      sudo: false
      when: reboot|default(false)
      local_action: wait_for host="{{ inventory_hostname }}" port={{ ansible_ssh_port }} state=started
