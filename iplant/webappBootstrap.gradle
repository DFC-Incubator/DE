import org.gradle.logging.StyledTextOutputFactory;
import static org.gradle.logging.StyledTextOutput.Style;

configure(subprojects.findAll{it.name == "de-webapp" || it.name == "belphegor"}) {
    def out = services.get(StyledTextOutputFactory).create("org.iplantc.gradle.git.logger")

    tasks.addRule('Pattern: configBootstrap[Deployment]: Performs a \'bootstrap-config.py [-d <Deployment>]\' in each application to generate config files.') { String taskName ->
        if (taskName.startsWith('configBootstrap')) {

            task(taskName, type: Exec) {
                def deployment = taskName - 'configBootstrap'
                if (deployment.isEmpty()) {
                    deployment = 'de-2'
                }
                workingDir project.projectDir
                commandLine 'python', 'bootstrap-config.py', '-d', deployment

                def configDir = new File(project.projectDir, '../configulon')
                def dePropsFile = new File(project.projectDir, 'src/main/resources/discoveryenvironment.properties')
                def belphegorPropsFile = new File(project.projectDir, 'src/main/resources/belphegor.properties')
                doFirst {
                    if(!configDir.isDirectory()) {
                        def errMsg = "The configulon directory doesn't exist. Clone or create a symbolic link."
                        out.withStyle(Style.ProgressStatus).println(errMsg)
                        throw new StopExecutionException(errMsg)
                    }
                    
                    out.withStyle(Style.ProgressStatus).println(">> ${project.name} bootstrap-config.py -d " + deployment)
                }
                doLast {
                    println "bootstrap successful"
                }
            }

        }
    }
}
